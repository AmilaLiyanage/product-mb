<?xml version="1.0" encoding="UTF-8"?>
<!--
 ~ Copyright (c) 2005-2010, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 ~
 ~ WSO2 Inc. licenses this file to you under the Apache License,
 ~ Version 2.0 (the "License"); you may not use this file except
 ~ in compliance with the License.
 ~ You may obtain a copy of the License at
 ~
 ~    http://www.apache.org/licenses/LICENSE-2.0
 ~
 ~ Unless required by applicable law or agreed to in writing,
 ~ software distributed under the License is distributed on an
 ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 ~ KIND, either express or implied.  See the License for the
 ~ specific language governing permissions and limitations
 ~ under the License.
 -->
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
  <meta http-equiv="content-type" content="text/html; charset=UTF-8" />
  <title>WSO2 MB - System Administration Guide</title>
  <link href="css/mb-docs.css" rel="stylesheet" />
  <link href="styles/dist-docs.css" rel="stylesheet" type="text/css"
  media="all" />
</head>

<body>
<h2>WSO2 MB - System Administration Guide </h2>

<h4>Contents </h4>

<p>1.0 Introduction<br />
2.0 Document Conventions<br />
3.0 Getting WSO2 MB<br />
4.0 Installing and Running WSO2 MB<br />
4.1 Running the MB in Standalone Mode<br />
4.2 Running MB Samples<br />
6.0 Using the WSO2 MB Management Console<br />
7.0 User Management<br />
8.0 Setting Up Logging<br />
9.0 Configuring the Underlying Axis2 Engine<br />
10.0 Adding External Dependencies to the System<br />
11.0 Registry Integration<br />
11.1 Using the Embedded Registry<br />
11.2 Using a Remote Registry<br />
12.0 Setting Up Key Stores<br />
13.0 Setting Up Host Names and Ports<br />
</p>

<h4>1.0 Introduction </h4>

<p>WSO2 MB is an open source Message Broker solution.It is to be your Message
Broker System. Our ultimate goal is to provide you a reliable Message
Brokering System</p>


<p>WSO2 MB is based on the revolutionary WSO2
Carbon framework. WSO2 Carbon is an OSGi based middleware framework for SOA.
Currently all WSO2 Java products are based on WSO2 Carbon including WSO2
Governance Registry and WSO2 WSAS. Since MB is OSGi based some knowledge in
OSGi would be helpful in administrating the WSO2 MB. </p>

<p>This document explains how to get WSO2 MB and install it on a server. The
latter sections of the document illustrates how to setup and configure various
features of the WSO2 MB. </p>

<h4>2.0 Document Conventions </h4>
<ul>
  <li>The phrase 'MB_HOME' refers to the directory in the file system where
    WSO2 MB is installed</li>
  <li>The phrase 'MB_SRC_HOME' refers to the directory in the file system
    where WSO2 MB source distribution is installed</li>
  <li>All file paths follow Unix/Linux conventions but they resemble Windows
    file paths as well</li>
</ul>

<h4>3.0 Getting WSO2 MB </h4>

<p>Binary distributions and source distributions of WSO2 MB can be downloaded
free from the <a href="http://wso2.com/products/message-broker/">WSO2 MB project</a> home
page in the <a href="http://wso2.org">WSO2 Oxygen Tank</a>. Before proceeding
to the downloads page you will be asked to register on the WSO2 Oxygen Tank.
Registration is free and optional however it is recommended that you sign up
for an account right away since registered Oxygen Tank users get exclusive
access to our support forums and tons of valuable content related to SOA and
Web Services. </p>

<p>Once you are on the downloads page click on the relevant links to download a
binary distribution or a source distribution of the alpha release of
the WSO2 MB.</p>

<p>If you downloaded a source distribution of the MB you need to build the
source to get the executable binary. WSO2 MB uses an <a
href="http://maven.apache.org">Apache Maven2</a> based build system and
therefore you need to first download and install Apache Maven2. Please refer
Maven2 documentation on installing and configuring Apache Maven2. Also note
that Apache Maven2 requires Java to run. Once Maven2 is properly configured
extract the downloaded source distribution and change your working directory to
the directory that is created. Then execute the command mvn clean install to
run the builder. Once the build process is complete you can find the binary
distribution archive in MB_SRC_HOME/modules/distribution/target directory. </p>

<h4>4.0 Installing and Running WSO2 MB </h4>

<p>To install the WSO2 MB simply extract the downloaded binary distribution
archive. If you built WSO2 MB from source extract the archive created by the
builder. We recommend installing WSO2 MB on a Unix/Linux system since that
will enable you to get the maximum out of the MB. In order to be able to start
WSO2 MB you first need Java 6 or higher. Having installed Java on your system
please set the JAVA_HOME environment variable to point to the directory in
which Java is installed. </p>

<h5>4.1 Running WSO2 MB in Standalone Mode </h5>

<p>Now you are all set to start WSO2 MB in the standalone mode. Go to
MB_HOME/bin directory and if you are on Unix/Linux execute the wso2server.sh
shell script or if you are on Windows execute the wso2server.bat batch file.
This will start the MB and you can see the progress of the startup procedure
on the console. Please note that server startup may take some time depending on
the hardware configuration of your system. The first time startup can take up
few additional seconds since some first time configuration logic is run by the
MB. If the server started up cleanly you should get an output similar to the
following on the console. </p>
<pre>TID: [] [] [2015-09-01 11:21:41,266]  WARN {org.apache.axiom.util.stax.dialect.StAXDialectDetector} -  Unable to determine dialect of the StAX implementation at bundleresource://12.fwk18928212/ {org.apache.axiom.util.stax.dialect.StAXDialectDetector}
TID: [] [] [2015-09-01 11:21:41,266]  WARN {org.apache.axiom.util.stax.dialect.StAXDialectDetector} -  Unable to determine dialect of the StAX implementation at bundleresource://12.fwk18928212/ {org.apache.axiom.util.stax.dialect.StAXDialectDetector}
TID: [] [] [2015-09-01 11:21:41,236]  INFO {org.wso2.andes.wso2.internal.QpidBundleActivator} -  Setting BundleContext in PluginManager {org.wso2.andes.wso2.internal.QpidBundleActivator}
TID: [-1234] [] [2015-09-01 11:21:41,786]  INFO {org.wso2.carbon.core.internal.CarbonCoreActivator} -  Starting WSO2 Carbon... {org.wso2.carbon.core.internal.CarbonCoreActivator}
TID: [-1234] [] [2015-09-01 11:21:41,786]  INFO {org.wso2.carbon.core.internal.CarbonCoreActivator} -  Operating System : Linux 3.13.0-62-generic, amd64 {org.wso2.carbon.core.internal.CarbonCoreActivator}
TID: [-1234] [] [2015-09-01 11:21:41,786]  INFO {org.wso2.carbon.core.internal.CarbonCoreActivator} -  Java Home        : /usr/lib/jvm/java-7-oracle/jre {org.wso2.carbon.core.internal.CarbonCoreActivator}
TID: [-1234] [] [2015-09-01 11:21:41,786]  INFO {org.wso2.carbon.core.internal.CarbonCoreActivator} -  Java Version     : 1.7.0_80 {org.wso2.carbon.core.internal.CarbonCoreActivator}
TID: [-1234] [] [2015-09-01 11:21:41,786]  INFO {org.wso2.carbon.core.internal.CarbonCoreActivator} -  Java VM          : Java HotSpot(TM) 64-Bit Server VM 24.80-b11,Oracle Corporation {org.wso2.carbon.core.internal.CarbonCoreActivator}
TID: [-1234] [] [2015-09-01 11:21:41,787]  INFO {org.wso2.carbon.core.internal.CarbonCoreActivator} -  Carbon Home      : /mb/cluster/mb1/wso2mb-3.0.0-SNAPSHOT {org.wso2.carbon.core.internal.CarbonCoreActivator}
TID: [-1234] [] [2015-09-01 11:21:41,787]  INFO {org.wso2.carbon.core.internal.CarbonCoreActivator} -  Java Temp Dir    : /mb/cluster/mb1/wso2mb-3.0.0-SNAPSHOT/tmp {org.wso2.carbon.core.internal.CarbonCoreActivator}
TID: [-1234] [] [2015-09-01 11:21:41,787]  INFO {org.wso2.carbon.core.internal.CarbonCoreActivator} -  User             : admin, en-US, Asia/Colombo {org.wso2.carbon.core.internal.CarbonCoreActivator}
TID: [-1234] [] [2015-09-01 11:21:41,866]  WARN {org.wso2.carbon.core.bootup.validator.util.ValidationResultPrinter} -  Carbon is configured to use the default keystore (wso2carbon.jks). To maximize security when deploying to a production environment, configure a new keystore with a unique password in the production server profile. {org.wso2.carbon.core.bootup.validator.util.ValidationResultPrinter}
TID: [] [] [2015-09-01 11:21:41,871]  INFO {org.wso2.carbon.databridge.agent.thrift.AgentHolder} -  Agent created ! {org.wso2.carbon.databridge.agent.thrift.AgentHolder}
TID: [] [] [2015-09-01 11:21:41,886]  INFO {org.wso2.carbon.databridge.agent.thrift.internal.AgentDS} -  Successfully deployed Agent Client {org.wso2.carbon.databridge.agent.thrift.internal.AgentDS}
TID: [-1234] [] [2015-09-01 11:21:43,005]  INFO {org.wso2.carbon.registry.core.jdbc.EmbeddedRegistryService} -  Configured Registry in 58ms {org.wso2.carbon.registry.core.jdbc.EmbeddedRegistryService}
TID: [-1234] [] [2015-09-01 11:21:43,029]  INFO {org.wso2.carbon.registry.core.jdbc.EmbeddedRegistryService} -  Connected to mount at wso2govregistry in 2ms {org.wso2.carbon.registry.core.jdbc.EmbeddedRegistryService}
TID: [-1234] [] [2015-09-01 11:21:43,114]  INFO {org.wso2.carbon.registry.core.jdbc.EmbeddedRegistryService} -  Connected to mount at wso2govregistry in 0ms {org.wso2.carbon.registry.core.jdbc.EmbeddedRegistryService}
TID: [-1234] [] [2015-09-01 11:21:43,124]  INFO {org.wso2.carbon.registry.core.internal.RegistryCoreServiceComponent} -  Registry Mode    : READ-WRITE {org.wso2.carbon.registry.core.internal.RegistryCoreServiceComponent}
TID: [-1234] [] [2015-09-01 11:21:43,184]  INFO {org.wso2.carbon.metrics.impl.MetricServiceImpl} -  Creating JDBC reporter for Metrics with source 'ramith-laptop', data source 'jdbc/WSO2MetricsDB' and 60 seconds polling period {org.wso2.carbon.metrics.impl.MetricServiceImpl}
TID: [-1234] [] [2015-09-01 11:21:43,185]  INFO {org.wso2.carbon.metrics.impl.reporter.AbstractReporter} -  Started JMX reporter for Metrics {org.wso2.carbon.metrics.impl.reporter.AbstractReporter}
TID: [-1234] [] [2015-09-01 11:21:43,189]  INFO {org.wso2.carbon.metrics.impl.reporter.AbstractReporter} -  Started JDBC reporter for Metrics {org.wso2.carbon.metrics.impl.reporter.AbstractReporter}
TID: [-1234] [] [2015-09-01 11:21:43,395]  INFO {org.wso2.carbon.user.core.internal.UserStoreMgtDSComponent} -  Carbon UserStoreMgtDSComponent activated successfully. {org.wso2.carbon.user.core.internal.UserStoreMgtDSComponent}
TID: [-1234] [] [2015-09-01 11:21:47,171]  INFO {org.apache.axis2.deployment.ClusterBuilder} -  Clustering has been enabled {org.apache.axis2.deployment.ClusterBuilder}
TID: [-1234] [] [2015-09-01 11:21:47,171]  INFO {org.apache.axis2.deployment.ClusterBuilder} -  Clustering has been enabled {org.apache.axis2.deployment.ClusterBuilder}
TID: [-1234] [] [2015-09-01 11:21:47,173]  INFO {org.apache.axis2.deployment.ClusterBuilder} -  Running in application mode {org.apache.axis2.deployment.ClusterBuilder}
TID: [-1234] [] [2015-09-01 11:21:47,173]  INFO {org.apache.axis2.deployment.ClusterBuilder} -  Running in application mode {org.apache.axis2.deployment.ClusterBuilder}
TID: [-1234] [] [2015-09-01 11:21:47,281]  INFO {org.wso2.carbon.identity.user.store.configuration.deployer.UserStoreConfigurationDeployer} -  User Store Configuration Deployer initiated. {org.wso2.carbon.identity.user.store.configuration.deployer.UserStoreConfigurationDeployer}
TID: [-1234] [] [2015-09-01 11:21:47,281]  INFO {org.wso2.carbon.identity.user.store.configuration.deployer.UserStoreConfigurationDeployer} -  User Store Configuration Deployer initiated. {org.wso2.carbon.identity.user.store.configuration.deployer.UserStoreConfigurationDeployer}
TID: [-1234] [] [2015-09-01 11:21:47,345]  INFO {org.apache.axis2.deployment.ModuleDeployer} -  Deploying module: addressing-1.6.1-wso2v14 - file:/mb/cluster/mb1/wso2mb-3.0.0-SNAPSHOT/repository/deployment/client/modules/addressing-1.6.1-wso2v14.mar {org.apache.axis2.deployment.ModuleDeployer}
TID: [-1234] [] [2015-09-01 11:21:47,345]  INFO {org.apache.axis2.deployment.ModuleDeployer} -  Deploying module: addressing-1.6.1-wso2v14 - file:/mb/cluster/mb1/wso2mb-3.0.0-SNAPSHOT/repository/deployment/client/modules/addressing-1.6.1-wso2v14.mar {org.apache.axis2.deployment.ModuleDeployer}
TID: [-1234] [] [2015-09-01 11:21:47,348]  INFO {org.apache.axis2.deployment.ModuleDeployer} -  Deploying module: rampart-1.6.1-wso2v10 - file:/mb/cluster/mb1/wso2mb-3.0.0-SNAPSHOT/repository/deployment/client/modules/rampart-1.6.1-wso2v10.mar {org.apache.axis2.deployment.ModuleDeployer}
TID: [-1234] [] [2015-09-01 11:21:47,348]  INFO {org.apache.axis2.deployment.ModuleDeployer} -  Deploying module: rampart-1.6.1-wso2v10 - file:/mb/cluster/mb1/wso2mb-3.0.0-SNAPSHOT/repository/deployment/client/modules/rampart-1.6.1-wso2v10.mar {org.apache.axis2.deployment.ModuleDeployer}
TID: [-1234] [] [2015-09-01 11:21:47,516]  INFO {org.apache.axis2.deployment.DeploymentEngine} -  Deploying Web service: org.wso2.carbon.andes.admin-3.0.0.SNAPSHOT -  {org.apache.axis2.deployment.DeploymentEngine}
TID: [-1234] [] [2015-09-01 11:21:47,516]  INFO {org.apache.axis2.deployment.DeploymentEngine} -  Deploying Web service: org.wso2.carbon.andes.admin-3.0.0.SNAPSHOT -  {org.apache.axis2.deployment.DeploymentEngine}
TID: [-1234] [] [2015-09-01 11:21:47,524]  INFO {org.wso2.carbon.core.deployment.DeploymentInterceptor} -  Deploying Axis2 service: AndesManagerService {super-tenant} {org.wso2.carbon.core.deployment.DeploymentInterceptor}
TID: [-1234] [] [2015-09-01 11:21:47,524]  INFO {org.apache.axis2.deployment.DeploymentEngine} -  Deploying Web service: org.wso2.carbon.andes.cluster.mgt-3.0.0.SNAPSHOT -  {org.apache.axis2.deployment.DeploymentEngine}
TID: [-1234] [] [2015-09-01 11:21:47,524]  INFO {org.apache.axis2.deployment.DeploymentEngine} -  Deploying Web service: org.wso2.carbon.andes.cluster.mgt-3.0.0.SNAPSHOT -  {org.apache.axis2.deployment.DeploymentEngine}
TID: [-1234] [] [2015-09-01 11:21:47,715]  WARN {org.apache.axis2.description.java2wsdl.DefaultSchemaGenerator} -  We don't support method overloading. Ignoring [validateAudienceRestriction] {org.apache.axis2.description.java2wsdl.DefaultSchemaGenerator}
TID: [-1234] [] [2015-09-01 11:21:47,715]  WARN {org.apache.axis2.description.java2wsdl.DefaultSchemaGenerator} -  We don't support method overloading. Ignoring [validateAudienceRestriction] {org.apache.axis2.description.java2wsdl.DefaultSchemaGenerator}
TID: [-1234] [] [2015-09-01 11:21:48,129]  INFO {org.apache.axis2.deployment.DeploymentEngine} -  Deploying Web service: org.wso2.carbon.tryit-4.4.0 -  {org.apache.axis2.deployment.DeploymentEngine}
TID: [-1234] [] [2015-09-01 11:21:48,129]  INFO {org.apache.axis2.deployment.DeploymentEngine} -  Deploying Web service: org.wso2.carbon.tryit-4.4.0 -  {org.apache.axis2.deployment.DeploymentEngine}
TID: [-1234] [] [2015-09-01 11:21:48,198]  WARN {org.apache.axis2.description.java2wsdl.DefaultSchemaGenerator} -  We don't support method overloading. Ignoring [getAttributeName] {org.apache.axis2.description.java2wsdl.DefaultSchemaGenerator}
TID: [-1234] [] [2015-09-01 11:21:48,198]  WARN {org.apache.axis2.description.java2wsdl.DefaultSchemaGenerator} -  We don't support method overloading. Ignoring [getAttributeName] {org.apache.axis2.description.java2wsdl.DefaultSchemaGenerator}
TID: [-1234] [] [2015-09-01 11:21:48,314]  INFO {org.wso2.carbon.core.init.CarbonServerManager} -  Repository       : /mb/cluster/mb1/wso2mb-3.0.0-SNAPSHOT/repository/deployment/server/ {org.wso2.carbon.core.init.CarbonServerManager}
TID: [-1234] [] [2015-09-01 11:21:48,324]  INFO {org.wso2.carbon.andes.core.internal.ds.QueueManagerServiceDS} -  Successfully created the queue manager service {org.wso2.carbon.andes.core.internal.ds.QueueManagerServiceDS}
TID: [-1234] [] [2015-09-01 11:21:48,327]  INFO {org.wso2.carbon.andes.core.internal.ds.SubscriptionManagerServiceDS} -  Successfully created the subscription manager service {org.wso2.carbon.andes.core.internal.ds.SubscriptionManagerServiceDS}
TID: [-1234] [] [2015-09-01 11:21:48,364]  INFO {org.wso2.carbon.core.multitenancy.eager.TenantLoadingConfig} -  Using tenant lazy loading policy... {org.wso2.carbon.core.multitenancy.eager.TenantLoadingConfig}
TID: [-1234] [] [2015-09-01 11:21:48,380]  INFO {org.wso2.carbon.core.internal.permission.update.PermissionUpdater} -  Permission cache updated for tenant -1234 {org.wso2.carbon.core.internal.permission.update.PermissionUpdater}
TID: [-1234] [] [2015-09-01 11:21:48,391]  INFO {org.wso2.andes.configuration.AndesConfigurationManager} -  Main andes configuration located at : /mb/cluster/mb1/wso2mb-3.0.0-SNAPSHOT/repository/conf/broker.xml {org.wso2.andes.configuration.AndesConfigurationManager}
TID: [-1234] [] [2015-09-01 11:21:49,213]  INFO {org.wso2.carbon.core.transports.http.HttpsTransportListener} -  HTTPS port       : 9443 {org.wso2.carbon.core.transports.http.HttpsTransportListener}
TID: [-1234] [] [2015-09-01 11:21:49,213]  INFO {org.wso2.carbon.core.transports.http.HttpTransportListener} -  HTTP port        : 9763 {org.wso2.carbon.core.transports.http.HttpTransportListener}
TID: [-1234] [] [2015-09-01 11:21:49,226]  INFO {org.wso2.carbon.core.clustering.hazelcast.HazelcastClusteringAgent} -  Cluster domain: wso2.carbon.domain {org.wso2.carbon.core.clustering.hazelcast.HazelcastClusteringAgent}
TID: [-1234] [] [2015-09-01 11:21:49,227]  INFO {org.wso2.carbon.core.clustering.hazelcast.HazelcastClusteringAgent} -  Using wka based membership management scheme {org.wso2.carbon.core.clustering.hazelcast.HazelcastClusteringAgent}
TID: [-1234] [] [2015-09-01 11:21:49,228]  INFO {org.wso2.carbon.core.clustering.hazelcast.util.MemberUtils} -  Added member: Host:10.100.1.165, Remote Host:null, Port: 4100, HTTP:-1, HTTPS:-1, Domain: null, Sub-domain:null, Active:true {org.wso2.carbon.core.clustering.hazelcast.util.MemberUtils}
TID: [-1234] [] [2015-09-01 11:21:50,523]  INFO {org.wso2.carbon.core.clustering.hazelcast.HazelcastClusteringAgent} -  Hazelcast initialized in 1290ms {org.wso2.carbon.core.clustering.hazelcast.HazelcastClusteringAgent}
TID: [-1234] [] [2015-09-01 11:21:50,565]  INFO {org.wso2.carbon.core.clustering.hazelcast.HazelcastClusteringAgent} -  Local member: [868f5bd2-6452-40e0-ad2f-b240bd2ccd71] - Host:10.100.1.165, Remote Host:null, Port: 4000, HTTP:9763, HTTPS:9443, Domain: wso2.carbon.domain, Sub-domain:worker, Active:true {org.wso2.carbon.core.clustering.hazelcast.HazelcastClusteringAgent}
TID: [-1234] [] [2015-09-01 11:21:50,573]  INFO {org.wso2.carbon.core.clustering.hazelcast.HazelcastClusteringAgent} -  Elected this member [868f5bd2-6452-40e0-ad2f-b240bd2ccd71] as the Coordinator node {org.wso2.carbon.core.clustering.hazelcast.HazelcastClusteringAgent}
TID: [] [] [2015-09-01 11:21:50,574]  INFO {org.wso2.carbon.core.clustering.hazelcast.util.MemberUtils} -  Added member: Host:10.100.1.165, Remote Host:null, Port: 4000, HTTP:9763, HTTPS:9443, Domain: wso2.carbon.domain, Sub-domain:worker, Active:true {org.wso2.carbon.core.clustering.hazelcast.util.MemberUtils}
TID: [-1234] [] [2015-09-01 11:21:50,653]  INFO {org.wso2.andes.server.cluster.coordination.hazelcast.HazelcastAgent} -  Initializing Hazelcast Agent {org.wso2.andes.server.cluster.coordination.hazelcast.HazelcastAgent}
TID: [-1234] [] [2015-09-01 11:21:50,657]  INFO {org.wso2.andes.server.cluster.coordination.hazelcast.HazelcastAgent} -  Successfully initialized Hazelcast Agent {org.wso2.andes.server.cluster.coordination.hazelcast.HazelcastAgent}
TID: [-1234] [] [2015-09-01 11:21:50,658]  INFO {org.wso2.carbon.andes.internal.QpidServiceComponent} -  Activating Andes Message Broker Engine... {org.wso2.carbon.andes.internal.QpidServiceComponent}
TID: [-1234] [] [2015-09-01 11:21:50,664]  INFO {org.wso2.andes.server.Broker} -  Starting Qpid using configuration : /mb/cluster/mb1/wso2mb-3.0.0-SNAPSHOT/repository/conf/advanced/qpid-config.xml {org.wso2.andes.server.Broker}
TID: [-1234] [] [2015-09-01 11:21:50,681]  INFO {org.wso2.andes.server.registry.ApplicationRegistry} -  Initialising Application Registry(org.wso2.andes.server.registry.ConfigurationFileApplicationRegistry@35a572cb) {org.wso2.andes.server.registry.ApplicationRegistry}
TID: [-1234] [] [2015-09-01 11:21:50,693]  INFO {org.wso2.andes.server.plugins.PluginManager} -  Opened service trackers {org.wso2.andes.server.plugins.PluginManager}
TID: [-1234] [] [2015-09-01 11:21:50,746]  INFO {org.wso2.andes.server.management.JMXManagedObjectRegistry} -  Initialising managed object registry using platform MBean server {org.wso2.andes.server.management.JMXManagedObjectRegistry}
TID: [-1234] [] [2015-09-01 11:21:50,748]  INFO {org.wso2.andes.server.security.auth.manager.PrincipalDatabaseAuthenticationManager} -  PrincipalDatabase concrete implementation : org.wso2.carbon.andes.authentication.andes.CarbonBasedPrincipalDatabase {org.wso2.andes.server.security.auth.manager.PrincipalDatabaseAuthenticationManager}
TID: [-1234] [] [2015-09-01 11:21:50,750]  INFO {org.wso2.andes.server.security.auth.manager.PrincipalDatabaseAuthenticationManager} -  Initialised PLAIN SASL provider successfully {org.wso2.andes.server.security.auth.manager.PrincipalDatabaseAuthenticationManager}
TID: [-1234] [] [2015-09-01 11:21:50,750]  INFO {org.wso2.andes.server.security.auth.manager.PrincipalDatabaseAuthenticationManager} -  Additional SASL providers successfully registered. {org.wso2.andes.server.security.auth.manager.PrincipalDatabaseAuthenticationManager}
TID: [-1234] [] [2015-09-01 11:21:50,750]  INFO {org.wso2.andes.server.security.auth.manager.PrincipalDatabaseAuthenticationManager} -  Registering UserManagementMBean {org.wso2.andes.server.security.auth.manager.PrincipalDatabaseAuthenticationManager}
TID: [-1234] [] [2015-09-01 11:21:50,779]  INFO {org.wso2.andes.store.rdbms.RDBMSConnection} -  JDBC connection established with jndi config WSO2MBStoreDB {org.wso2.andes.store.rdbms.RDBMSConnection}
TID: [-1234] [] [2015-09-01 11:21:50,787]  INFO {org.wso2.andes.store.rdbms.RDBMSAndesContextStoreImpl} -  Andes Context Store initialised {org.wso2.andes.store.rdbms.RDBMSAndesContextStoreImpl}
TID: [-1234] [] [2015-09-01 11:21:50,787]  INFO {org.wso2.andes.kernel.AndesKernelBoot} -  AndesContextStore initialised with org.wso2.andes.store.rdbms.RDBMSAndesContextStoreImpl {org.wso2.andes.kernel.AndesKernelBoot}
TID: [-1234] [] [2015-09-01 11:21:50,797]  INFO {org.wso2.andes.store.rdbms.RDBMSConnection} -  JDBC connection established with jndi config WSO2MBStoreDB {org.wso2.andes.store.rdbms.RDBMSConnection}
TID: [-1234] [] [2015-09-01 11:21:50,810]  INFO {org.wso2.andes.store.rdbms.RDBMSMessageStoreImpl} -  Message Store initialised {org.wso2.andes.store.rdbms.RDBMSMessageStoreImpl}
TID: [-1234] [] [2015-09-01 11:21:50,810]  INFO {org.wso2.andes.kernel.AndesKernelBoot} -  Andes MessageStore initialised with org.wso2.andes.store.rdbms.RDBMSMessageStoreImpl {org.wso2.andes.kernel.AndesKernelBoot}
TID: [-1234] [] [2015-09-01 11:21:50,874]  INFO {org.wso2.andes.kernel.Andes} -  Andes API initialised. {org.wso2.andes.kernel.Andes}
TID: [-1234] [] [2015-09-01 11:21:50,880]  INFO {org.wso2.andes.kernel.AndesKernelBoot} -  Slots stored in last session were cleared to avoid duplicates when recovering. {org.wso2.andes.kernel.AndesKernelBoot}
TID: [-1234] [] [2015-09-01 11:21:50,912]  INFO {org.wso2.andes.kernel.AndesChannel} -  Channel created (ID: 1) {org.wso2.andes.kernel.AndesChannel}
TID: [-1234] [] [2015-09-01 11:21:50,941]  INFO {qpid.message.broker.listening} -  [Broker] BRK-1002 : Starting : Listening on TCP port 5672 {qpid.message.broker.listening}
TID: [-1234] [] [2015-09-01 11:21:50,943]  INFO {qpid.message.broker.listening} -  [Broker] BRK-1002 : Starting : Listening on TCP/SSL port 8672 {qpid.message.broker.listening}
TID: [-1234] [] [2015-09-01 11:21:50,946]  INFO {org.wso2.andes.server.cluster.HazelcastClusterAgent} -  This node is elected as the Slot Coordinator. Registering localhost:7611 {org.wso2.andes.server.cluster.HazelcastClusterAgent}
TID: [-1234] [] [2015-09-01 11:21:50,947]  INFO {org.wso2.andes.server.cluster.ClusterManager} -  Handling cluster gossip: Node NODE/10.100.1.165:4000  Joined the Cluster {org.wso2.andes.server.cluster.ClusterManager}
TID: [-1234] [] [2015-09-01 11:21:50,947]  INFO {org.wso2.andes.server.cluster.ClusterManager} -  Initializing Cluster Mode. Current Node ID:NODE/10.100.1.165:4000 {org.wso2.andes.server.cluster.ClusterManager}
TID: [-1234] [] [2015-09-01 11:21:50,948]  INFO {org.wso2.andes.server.cluster.ClusterManager} -  Clearing the Persisted State of Node with ID NODE/10.100.1.165:4000 {org.wso2.andes.server.cluster.ClusterManager}
TID: [-1234] [] [2015-09-01 11:21:50,951]  INFO {org.wso2.andes.kernel.AndesKernelBoot} -  Syncing exchanges, queues, bindings and subscriptions {org.wso2.andes.kernel.AndesKernelBoot}
TID: [-1234] [] [2015-09-01 11:21:50,952]  WARN {org.wso2.andes.kernel.AndesRecoveryTask} -  Recovering node. Adding queue [DeadLetterChannel] OW=admin/X=false/Dtrue/LPT0 {org.wso2.andes.kernel.AndesRecoveryTask}
TID: [-1234] [] [2015-09-01 11:21:50,979]  INFO {org.wso2.andes.server.virtualhost.VirtualHostConfigSynchronizer} -  Queue sync - Added Queue: DeadLetterChannel, Owner: admin, IsExclusive: false, Arguments: null {org.wso2.andes.server.virtualhost.VirtualHostConfigSynchronizer}
TID: [-1234] [] [2015-09-01 11:21:50,990]  INFO {org.wso2.andes.thrift.MBThriftServer} -  Starting the Message Broker Thrift server on host 'localhost' on port '7611'... {org.wso2.andes.thrift.MBThriftServer}
TID: [] [] [2015-09-01 11:21:50,992]  INFO {org.wso2.andes.kernel.MessagingEngine} -  Starting SlotDelivery Workers. {org.wso2.andes.kernel.MessagingEngine}
TID: [-1234] [] [2015-09-01 11:21:50,992]  INFO {org.wso2.andes.kernel.Andes} -  Starting Safe Zone Calculator for slots. {org.wso2.andes.kernel.Andes}
TID: [] [] [2015-09-01 11:21:50,993]  INFO {org.wso2.andes.kernel.MessagingEngine} -  Start Disruptor writing messages to store. {org.wso2.andes.kernel.MessagingEngine}
TID: [] [] [2015-09-01 11:21:51,041]  INFO {org.wso2.andes.mqtt.MQTTopicManager} -  MQTT andes connecting bridge initialized successfully {org.wso2.andes.mqtt.MQTTopicManager}
TID: [-1234] [] [2015-09-01 11:21:51,067]  INFO {org.dna.mqtt.moquette.server.netty.NettyAcceptor} -  Server binded host: 0.0.0.0, port: 1883 {org.dna.mqtt.moquette.server.netty.NettyAcceptor}
TID: [-1234] [] [2015-09-01 11:21:51,367]  INFO {org.dna.mqtt.moquette.server.netty.NettyAcceptor} -  Starting SSL on port 8883 {org.dna.mqtt.moquette.server.netty.NettyAcceptor}
TID: [-1234] [] [2015-09-01 11:21:51,368]  INFO {org.dna.mqtt.moquette.server.netty.NettyAcceptor} -  Server binded host: 0.0.0.0, port: 8883 {org.dna.mqtt.moquette.server.netty.NettyAcceptor}
TID: [-1234] [] [2015-09-01 11:21:51,370]  INFO {org.wso2.carbon.andes.internal.QpidServiceComponent} -  AMQP Host Address : 0.0.0.0 Port : 5672 {org.wso2.carbon.andes.internal.QpidServiceComponent}
TID: [-1234] [] [2015-09-01 11:21:51,370]  INFO {org.wso2.carbon.andes.internal.QpidServiceComponent} -  Successfully connected to AMQP server on port 5672 {org.wso2.carbon.andes.internal.QpidServiceComponent}
TID: [-1234] [] [2015-09-01 11:21:51,371]  INFO {org.wso2.carbon.andes.internal.QpidServiceComponent} -  MQTT Host Address : 0.0.0.0 Port : 1883 {org.wso2.carbon.andes.internal.QpidServiceComponent}
TID: [-1234] [] [2015-09-01 11:21:51,371]  INFO {org.wso2.carbon.andes.internal.QpidServiceComponent} -  Successfully connected to MQTT server on port 1883 {org.wso2.carbon.andes.internal.QpidServiceComponent}
TID: [-1234] [] [2015-09-01 11:21:51,371]  INFO {org.wso2.carbon.andes.internal.QpidServiceComponent} -  WSO2 Message Broker is started. {org.wso2.carbon.andes.internal.QpidServiceComponent}
TID: [-1234] [] [2015-09-01 11:21:51,413]  INFO {org.wso2.carbon.core.clustering.hazelcast.HazelcastClusteringAgent} -  Cluster initialization completed {org.wso2.carbon.core.clustering.hazelcast.HazelcastClusteringAgent}
TID: [-1234] [] [2015-09-01 11:21:51,420]  INFO {org.wso2.carbon.core.deployment.DeploymentInterceptor} -  Deploying Axis2 service: echo {super-tenant} {org.wso2.carbon.core.deployment.DeploymentInterceptor}
TID: [-1234] [] [2015-09-01 11:21:51,421]  INFO {org.apache.axis2.deployment.DeploymentEngine} -  Deploying Web service: Echo.aar - file:/mb/cluster/mb1/wso2mb-3.0.0-SNAPSHOT/repository/deployment/server/axis2services/Echo.aar {org.apache.axis2.deployment.DeploymentEngine}
TID: [-1234] [] [2015-09-01 11:21:51,421]  INFO {org.apache.axis2.deployment.DeploymentEngine} -  Deploying Web service: Echo.aar - file:/mb/cluster/mb1/wso2mb-3.0.0-SNAPSHOT/repository/deployment/server/axis2services/Echo.aar {org.apache.axis2.deployment.DeploymentEngine}
TID: [-1234] [] [2015-09-01 11:21:51,427]  INFO {org.wso2.carbon.core.deployment.DeploymentInterceptor} -  Deploying Axis2 service: EventSinkService {super-tenant} {org.wso2.carbon.core.deployment.DeploymentInterceptor}
TID: [-1234] [] [2015-09-01 11:21:51,427]  INFO {org.apache.axis2.deployment.DeploymentEngine} -  Deploying Web service: EventSinkService.aar - file:/mb/cluster/mb1/wso2mb-3.0.0-SNAPSHOT/repository/deployment/server/axis2services/EventSinkService.aar {org.apache.axis2.deployment.DeploymentEngine}
TID: [-1234] [] [2015-09-01 11:21:51,427]  INFO {org.apache.axis2.deployment.DeploymentEngine} -  Deploying Web service: EventSinkService.aar - file:/mb/cluster/mb1/wso2mb-3.0.0-SNAPSHOT/repository/deployment/server/axis2services/EventSinkService.aar {org.apache.axis2.deployment.DeploymentEngine}
TID: [-1234] [] [2015-09-01 11:21:51,439]  INFO {org.wso2.carbon.core.deployment.DeploymentInterceptor} -  Deploying Axis2 service: Version {super-tenant} {org.wso2.carbon.core.deployment.DeploymentInterceptor}
TID: [-1234] [] [2015-09-01 11:21:51,439]  INFO {org.apache.axis2.deployment.DeploymentEngine} -  Deploying Web service: Version.aar - file:/mb/cluster/mb1/wso2mb-3.0.0-SNAPSHOT/repository/deployment/server/axis2services/Version.aar {org.apache.axis2.deployment.DeploymentEngine}
TID: [-1234] [] [2015-09-01 11:21:51,439]  INFO {org.apache.axis2.deployment.DeploymentEngine} -  Deploying Web service: Version.aar - file:/mb/cluster/mb1/wso2mb-3.0.0-SNAPSHOT/repository/deployment/server/axis2services/Version.aar {org.apache.axis2.deployment.DeploymentEngine}
TID: [-1234] [] [2015-09-01 11:21:51,477]  INFO {org.wso2.carbon.core.init.JMXServerManager} -  JMX Service URL  : service:jmx:rmi://localhost:11111/jndi/rmi://localhost:9999/jmxrmi {org.wso2.carbon.core.init.JMXServerManager}
TID: [-1234] [] [2015-09-01 11:21:51,477]  INFO {org.wso2.carbon.core.internal.StartupFinalizerServiceComponent} -  Server           :  WSO2 Message Broker-3.0.0 {org.wso2.carbon.core.internal.StartupFinalizerServiceComponent}
TID: [-1234] [] [2015-09-01 11:21:51,477]  INFO {org.wso2.carbon.core.internal.StartupFinalizerServiceComponent} -  WSO2 Carbon started in 11 sec {org.wso2.carbon.core.internal.StartupFinalizerServiceComponent}
TID: [-1234] [] [2015-09-01 11:21:51,665]  INFO {org.wso2.carbon.ui.internal.CarbonUIServiceComponent} -  Mgt Console URL  : https://10.100.1.165:9443/carbon/ {org.wso2.carbon.ui.internal.CarbonUIServiceComponent}
</pre>

<p>To verify that the MB is up and running fire off your Web browser and go to
https://localhost:9443/carbon. This will take you to the WSO2 MB on-line
management console. </p>
<img src="images/Login.png" alt="Log-in" />

<p>You can login to the console using the default user credentials given below.
</p>
<ul>
  <li>Username: admin</li>
  <li>Password: admin</li>
</ul>

<p>If you can get that far then the MB is properly installed and running. </p>

<p>WSO2 MB startup scripts stated above accept a few useful arguments. </p>

<p>--cleanRegistry<br />
  This argument forces the embedded Registry instance to be cleaned before
starting the MB. Note that this will clean the internal database therefore any
configurations you saved previously will be permanently lost. </p>

<p>--restart<br />
   Restart the Carbon Unix daemon.</p>

<p>-debug &lt;port&gt;<br />
   Enables remote debugging on the MB through the specified port. </p>

<p>-dump<br />
   Print a thread dump of the Carbon Unix daemon.</p>


<p>In addition to the above mentioned arguments the MB startup scripts accept
the following VM arguments. </p>

<p>-DosgiConsole<br />
   Starts the OSGi console from which you can directly interact with the
underlying OSGi runtime. </p>


<h4>4.0 WSO2 MB Directory Hierarchy </h4>

<p>When you extract a WSO2 MB binary distribution archive you will find the
following directories in the top level that is created. </p>

<p>bin -<br />
Contains all the necessary scripts to interact with the WSO2 MB instance.
There are shell scripts (with .sh extension) for Unix/Linux users and batch
files (with .bat extension) for Windows users. In general you will find the
following scripts in this directory.<br />
<br />
<ul>
  <li>wso2server.sh/wso2server.bat - Launches WSO2 MB </li>
  <li>wsdl2java.sh/wsdl2java.bat - Launches the Java stub generation tool for
    Web Services </li>
  <li>java2wsdl.sh/java2wsdl.bat - Launches the WSDL generation tool for Java
    Web Services </li>
  <li>tcpmon.sh/tcpmon.bat - Launches TCPMon, the TCP connection monitor </li>
  <li>chpasswd.sh/chpasswd.bat -Use this script to change the administrator
    password without signing in to the server<br />
  </li>
  <li>daemon.sh -Start WSO2 MB as a daemon on Unix/Linux systems<br />
  </li>
  <li>install.bat - Install WSO2 MB as a background service on Windows<br />
  </li>
  <li>repowriter.sh/repowriter.bat </li>
</ul>
<br />
In addition to the above mentioned scripts you will find a sub-directory named
'native' in the bin directory.<br />
</p>

<p>repository/deployment -<br />
This directory houses all the OSGi bundles, service artifacts, modules and
related resources used by the WSO2 MB instance. The repository/components/plugins 
directory will contain all the necessary OSGi bundles at server runtime.</p>

<p>repository/conf -<br />
All the global configuration files (eg: axis2.xml, transports-mgt.xml,
carbon.xml ) used by the MB are stored in this directory.
</p>

<p>lib -<br />
The lib directory houses all the jar files and OSGi bundles required by the
embedded Tomcat instance. Starting from Carbon 2.0 the log4j.properties file
used by the MB is also stored here. </p>

<p>resources -<br />
Contains additional resources required by WSO2 MB. This includes security
related resources such as keystores. </p>

<p>repository/logs -<br />
All the server logs created during server runtime will be stored here. </p>

<p>dbscripts -<br />
Contains a collection of database scripts required to create the Carbon
database on a variety of database management systems.<br />
</p>

<h4>5.0 Using the WSO2 MB Management Console </h4>

<p>WSO2 MB management console is a Web based control panel powered by JSP and
AJAX which enables system administrators to interact with a running MB
instance, without having to touch any underlying configuration files. The
management console allows the users to command and control proxy services,
sequences, transports, local entries, registry, modules, endpoints and much
more. MB management console is a great way to try things out without having to
edit the actual configuration files or without having to restart the MB for
changes to take effect. </p>

<p>We recommend using Mozilla Firefox 3 or Internet Explorer 7 to access the
WSO2 MB management console. Please note that your browser must be JavaScript
enabled to take the full advantage of the management console. To access the MB
management console fire off you Web browser and navigate to https://&lt;Server
Host&gt;:&lt;Server Port&gt;/&lt;Context&gt;. If you are running the Web
browser on the same machine as the MB you may use 'localhost' as the server
host. The default port and the context for the MB management console are
'9443' and 'carbon' respectively. If you entered the URL correctly you will be
taken to the management console's login page. </p>

<p>On the login page enter 'admin' as the username and the password to login to
the system. You can change user credentials and even add new users once you
login. Controls and wizards in the MB management console are pretty much self
explanatory. However if you are having trouble finishing your way in the
management console, click on the 'Help' link at the top right corner of any
page to access context sensitive help. </p>

<p>Please note that the MB management console makes use of the default HTTPS
servlet transport which is configured in the MB_HOME/conf/transports.xml file.
It is important that this transport is always properly configured in the
mentioned file. Otherwise the management console might be inaccessible to the
users. </p>

<h4>6.0 User Management </h4>

<p>To access the WSO2 MB user management features, first sign in to the MB
management console and click on 'User Management' under the 'Configure' menu in
the left navigation bar. This will take you to the User Management home page
which contains the controls illustrated below. </p>
<img src="images/user-mgt.PNG" alt="User Mgt" />

<p>From here you can manage users and roles. A user is associated with zero or
more roles (generally specified at user creation time) and each role is
associated with zero or more permissions (generally specified at role creation
time). Therefore the set of permissions owned by a user is determined by the
roles assigned to that user. A user owns the union of all the permissions
associated with the roles assigned to that user. By default MB comes with only
one role, the 'admin' role. This role is associated with the following set of
permissions.</p>

<p>By default the admin user is associated with the admin role and hence the
admin user is entitled to all the  permissions. </p>

<p>To add a new role to the system click on 'Roles' in the User Management home
page and on the page that appears click the 'Add New Role' link. This will
start the 'Add Role' wizard. The wizard will guide you though the process of
creating a role by specifying a unique name for the role and adding the
relevant permissions to the new role. Similarly to create a new user, click on
'Users' in the User Management home page. Then from the next page that appears
select 'Create New User' link. This will launch the 'Add User' wizard which
will enable you to create a new user account with login credentials and
associate the account with one or more existing roles. The MB management
console also enables you to search for and modify existing users and roles. </p>

<p>WSO2 MB can be easily configured to use an external user store in addition
to the built-in system user store. An external user store is an external
database which stores user data. It could be as simple as a relational database
or as sophisticated as an LDAP instance. Most organizations maintain such
centralized databases and it would be productive from the organization's point
of view to have the MB pick up user data from the existing centralized user
database. To connect the MB to an external user store simply click on the 'Add
External User Store' link on the User Management home page. Then on the page
that appears select the type of user store that will be plugged into the MB.
Currently the following types of user stores are supported. </p>
<ul>
  <li>JDBC </li>
  <li>LDAP </li>
  <li>Active Directory </li>
</ul>

<p>Having selected the type of the user store you need to provide additional
information required by the MB to connect to and retrieve user data from the
external user store. If all the required parameters were specified accurately
the MB will pick up user data from the external user store and users
registered on the external store will be able to access the MB as if their
accounts were created in the built-in system user store. </p>

<h4>7.0 Setting Up Logging </h4>

<p>Logging is one of the most important aspects of a production grade server. A
properly configured logging system is vital in identifying errors, security
threats and usage patterns. WSO2 MB uses a log4j based logging mechanism
through Apache Commons Logging facade library. The log4j.properties file which
governs how logging is performed by the server can be found in MB_HOME/lib
directory. However it is recommended not to make any alterations to the default
log4j.properties file. The recommended way of setting up logging is by using
the MB management console. Simply login to the management console and click on
'Logging' under the 'Configure' menu in the left navigation bar. From here you
can setup various appenders and configure log levels for various loggers. Any
changes to the logging configuration you make from the management console will
get priority over what is defined in the actual log4j.properties file. </p>

<p>By default WSO2 MB comes with the following log appenders configured. </p>
<ul>
  <li>CARBON_CONSOLE (Logs to the console when the server is running) </li>
  <li>CARBON_LOGFILE (Writes the logs to MB_HOME/repository/logs/wso2carbon.log) </li>
  <li>CARBON_MEMORY </li>
  <li>CARBON_SYS_LOG </li>
  <li>TRACE_APPENDER (Writes mediation time tracing/debug messages to the
    MB_HOME/repository/logs/wso2carbon-trace-messages.log for tracing enabled services) </li>
  <li>TRACE_MEMORYAPPENDER </li>
</ul>
 </body>
</html>
